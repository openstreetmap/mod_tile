# hadolint global ignore=DL3008,DL3025,DL3059
# Arguments
ARG debian_version=12
ARG libmapnik_version=3.1
ARG runner_additional_packages=libcurl4 libglib2.0

# Builder
FROM debian:${debian_version} AS builder

## Arguments
ARG debian_version

## Install builder dependencies
RUN --mount=type=cache,sharing=locked,id=debian:${debian_version}-/var/cache/apt,target=/var/cache/apt \
    --mount=type=cache,sharing=locked,id=debian:${debian_version}-/var/lib/apt,target=/var/lib/apt \
    export DEBIAN_FRONTEND=noninteractive && \
    apt-get --yes update && \
    apt-get --yes upgrade && \
    apt-get --no-install-recommends --yes install \
        apache2 \
        apache2-dev \
        curl \
        g++ \
        gcc \
        libcairo2-dev \
        libcurl4-openssl-dev \
        libglib2.0-dev \
        libiniparser-dev \
        libmapnik-dev \
        libmemcached-dev \
        librados-dev \
        netbase

## Build, Test & Install `mod_tile`
COPY . /tmp/mod_tile_src
WORKDIR /tmp/mod_tile_src
RUN export DESTDIR=/tmp/mod_tile && \
    ./autogen.sh && \
    ./configure && \
    make DESTDIR=${DESTDIR} install install-mod_tile
RUN make test

# Runner
FROM debian:${debian_version} AS runner

## Arguments
ARG debian_version
ARG libmapnik_version
ARG runner_additional_packages

## Install runner dependencies
RUN --mount=type=cache,sharing=locked,id=debian:${debian_version}-/var/cache/apt,target=/var/cache/apt \
    --mount=type=cache,sharing=locked,id=debian:${debian_version}-/var/lib/apt,target=/var/lib/apt \
    export DEBIAN_FRONTEND=noninteractive && \
    apt-get --yes update && \
    apt-get --yes upgrade && \
    apt-get --no-install-recommends --yes install ${runner_additional_packages} \
        apache2 \
        libcairo2 \
        libiniparser1 \
        libmapnik${libmapnik_version} \
        libmemcached11 \
        librados2

## Copy files from builder(s)
### mod_tile
COPY --from=builder /tmp/mod_tile /
COPY --from=builder \
    /tmp/mod_tile_src/utils/example-map \
    /usr/share/renderd/example-map
COPY --from=builder \
    /tmp/mod_tile_src/etc/apache2/renderd-example-map.conf \
    /etc/apache2/sites-available/renderd-example-map.conf

## Fix mapnik directories
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN sed \
        --expression "s#/usr/lib/mapnik/3.1/input#$(find /usr -mindepth 1 -type d -name input | grep mapnik)#g" \
        --expression "s#/usr/share/fonts/truetype#/usr/share/fonts#g" \
        /usr/local/etc/renderd.conf > /etc/renderd.conf
SHELL ["/bin/sh", "-c"]

## Add configuration
RUN printf "LoadModule tile_module %s\n" "$(find /usr -name mod_tile.so)" > /etc/apache2/mods-available/tile.load
RUN printf '\n[example-map]\nMAXZOOM=20\nMINZOOM=0\nURI=/tiles/renderd-example\nXML=/usr/share/renderd/example-map/mapnik.xml\n' >> /etc/renderd.conf
RUN printf '\n[example-map-jpg]\nMAXZOOM=20\nMINZOOM=0\nTYPE=jpg image/jpeg jpeg\nURI=/tiles/renderd-example-jpg\nXML=/usr/share/renderd/example-map/mapnik.xml\n' >> /etc/renderd.conf
RUN printf '\n[example-map-png256]\nMAXZOOM=20\nMINZOOM=0\nTYPE=png image/png png256\nURI=/tiles/renderd-example-png256\nXML=/usr/share/renderd/example-map/mapnik.xml\n' >> /etc/renderd.conf
RUN printf '\n[example-map-png32]\nMAXZOOM=20\nMINZOOM=0\nTYPE=png image/png png32\nURI=/tiles/renderd-example-png32\nXML=/usr/share/renderd/example-map/mapnik.xml\n' >> /etc/renderd.conf
RUN printf '\n[example-map-webp]\nMAXZOOM=20\nMINZOOM=0\nTYPE=webp image/webp webp\nURI=/tiles/renderd-example-webp\nXML=/usr/share/renderd/example-map/mapnik.xml\n' >> /etc/renderd.conf

## Create missing directories
RUN mkdir --parents /run/renderd /var/cache/renderd/tiles

## Enable module & site
RUN a2enmod tile && \
    a2ensite renderd-example-map

## Start services
CMD apachectl -e debug -k start; \
    G_MESSAGES_DEBUG=${G_MESSAGES_DEBUG:-info} renderd --foreground
